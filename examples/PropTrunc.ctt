module PropTrunc where

import Foundations

data PropTrunc (A : U) : U
  = eta (a : A)
  | squashAt (u v : PropTrunc A) <i> [(i=0) -> u, (i=1) -> v]

is-prop-PropTrunc (A : U) : is-prop (PropTrunc A)
  = \x y i. squashAt x y i

PropTruncProp (A : U) : Prop
  = (PropTrunc A, is-prop-PropTrunc A)

rec-PropTrunc (A : U) (P : Prop) (p : A -> P.1) : PropTrunc A -> P.1 = split
  eta a          -> p a
  squashAt x y i -> P.2 (rec-PropTrunc A P p x) (rec-PropTrunc A P p y) i

is-connected (A : U) : U = (x y : A) -> PropTrunc (Path A x y)

PathP-PropTrunc (A : U) : (B : U) (p : Path U A B) (u : PropTrunc A) (v : PropTrunc B) -> PathP (i. PropTrunc (p i)) u v
  = J U A (\B p. (u : PropTrunc A) (v : PropTrunc B) -> PathP (i. PropTrunc (p i)) u v) (\u v. is-prop-PropTrunc A u v)
